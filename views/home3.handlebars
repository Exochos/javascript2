<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />  
    <title>{{{data.name}}}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <link rel="stylesheet" type="text/css" href="./css/style.css" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <!-- Google Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
    <!-- Bootstrap core CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.18.0/css/mdb.min.css" rel="stylesheet">
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <style>
    </style>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>

<body><main>
    <div class="container">
      <br /><br /><br />
        <div class="row">
        </div>
        <div class="row">
        <div class="col-sm">
          <br />
          <div id="root"></div>
        </div>
      </div>


<script type="text/babel">
// Begin React //

const Dogs = (props) => {
  const ItemList = props.data.map((item) => 
    <li key={item._id} onClick={props.clickHandler}> {item.name} </li>
  );
  return <ul> {ItemList} </ul>
}

class DogApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      items: {{{data}}},
      currentItem: {}
    };
    this.selectItem = this.selectItem.bind(this);
    this.clearForm = this.clearForm.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.saveForm = this.saveForm.bind(this);
    this.deleteForm = this.deleteForm.bind(this);
  }
    selectItem = (event) => {
      const found = this.state.items.find((item) => {
        return item.name === event.target.innerText
      });
      this.setState({currentItem: found})
    }
    handleChange = (event) => {
      let newItem = this.state.currentItem
      newItem[event.target.name] = event.target.value
      this.setState({currentItem: newItem})
    }

    clearForm = () => {
      this.setState({ currentItem: {} })
    }

    //
    // Save Form Method
    // 
    saveForm = () => {
      fetch("/api/adddogs", {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(this.state.currentItem)
      })
      .then(res => res.json())
      .then((json) => { console.log(json) });
    }

    //
    // Delete form method
    //
    deleteForm = () => {
      const dogID = "/api/delete?name=" + this.state.currentItem.name
      console.log(dogID)
      fetch(dogID, {
        method: "GET",
        headers: { 'Content-Type': 'application/json'},
      })
      .then(res => res.json())
      .then((json) => { console.log(json) });
    }

render() {
  return (
    <div><h2>Dogs in the Database</h2><hr />
    <Dogs data={this.state.items} clickHandler={this.selectItem} />
    <ItemDetail 
      item = { this.state.currentItem } 
      handleChange = { this.handleChange } 
      clearForm = { this.clearForm } 
      saveForm = { this.saveForm }
      deleteForm = { this.deleteForm }
    />
  </div>);
  }
}

const ItemDetail = (props) => {
  return <div><hr />
    <h3> - Dog Details - </h3>
    <form>
            <label>Name:<input type="text" name="name" value={props.item.name || ""} onChange={props.handleChange} /></label><br />
            <label>Age: <input type="text" name="age" value={props.item.age || ""} onChange={props.handleChange} /></label><br/>
            <label>
              Height: <input type="text" name="height" value={props.item.height || ""} onChange={props.handleChange} />
            </label><br/>
            <label>
              Breed: <input type="text" name="breed" value={props.item.breed || ""} onChange={props.handleChange} />
            </label><br/>     
            <label>
              Weight: <input type="text" name="weight" value={props.item.weight || ""} onChange={props.handleChange} />
            </label><br/>     
    </form>
      <button name="clear" onClick={props.clearForm}> Clear </button>
      <button name="save" onClick={ props.saveForm }> Save </button>
      <button name="delete" onClick={ props.deleteForm }>Delete</button>
    </div>
}

ReactDOM.render(
  <DogApp />,
  document.getElementById('root')
);
</script>
</div>
</main></body>
</html>